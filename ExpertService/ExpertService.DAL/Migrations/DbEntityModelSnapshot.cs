// <auto-generated />
using System;
using ExpertService.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpertService.DAL.Migrations
{
    [DbContext(typeof(DbEntity))]
    partial class DbEntityModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpertService.Model.CalismaDonemi", b =>
                {
                    b.Property<int>("DonemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("FazlaMesaiAlındı")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("KıdemAlındı")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ihbarAlındı")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DonemId");

                    b.HasIndex("DosyaId");

                    b.ToTable("CalismaDonemi");
                });

            modelBuilder.Entity("ExpertService.Model.Dosya", b =>
                {
                    b.Property<int>("DosyaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AnaDosyaID")
                        .HasColumnType("int");

                    b.Property<string>("Açıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DavaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosyaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TCNO")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserTableUserId")
                        .HasColumnType("int");

                    b.Property<bool>("ZamanAsimi")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DosyaId");

                    b.HasIndex("AnaDosyaID");

                    b.HasIndex("UserTableUserId");

                    b.ToTable("Dosya");
                });

            modelBuilder.Entity("ExpertService.Model.Talepler", b =>
                {
                    b.Property<int>("TalepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<bool>("Hesapla")
                        .HasColumnType("bit");

                    b.Property<int>("TalepTipi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("TalepId");

                    b.HasIndex("DosyaId");

                    b.ToTable("Talepler");
                });

            modelBuilder.Entity("ExpertService.Model.UcretBilgileri", b =>
                {
                    b.Property<int>("UcretId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Açıklama")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DosyaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UcretId");

                    b.HasIndex("DosyaId");

                    b.ToTable("UcretBilgileri");
                });

            modelBuilder.Entity("ExpertService.Model.UserTable", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("UserTables");
                });

            modelBuilder.Entity("ExpertService.Model.ZamanCizelgesi", b =>
                {
                    b.Property<int>("ZamanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CalismaDonemiDonemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DonemId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("Gün")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("RestTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ZamanId");

                    b.HasIndex("CalismaDonemiDonemId");

                    b.ToTable("ZamanCizelgesi");
                });

            modelBuilder.Entity("ExpertService.Model.CalismaDonemi", b =>
                {
                    b.HasOne("ExpertService.Model.Dosya", "Dosya")
                        .WithMany("CalismaDonemis")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpertService.Model.Dosya", b =>
                {
                    b.HasOne("ExpertService.Model.Dosya", "AnaDosya")
                        .WithMany("EkDosya")
                        .HasForeignKey("AnaDosyaID");

                    b.HasOne("ExpertService.Model.UserTable", "UserTable")
                        .WithMany("Dosyalar")
                        .HasForeignKey("UserTableUserId");
                });

            modelBuilder.Entity("ExpertService.Model.Talepler", b =>
                {
                    b.HasOne("ExpertService.Model.Dosya", "Dosya")
                        .WithMany("Taleplers")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpertService.Model.UcretBilgileri", b =>
                {
                    b.HasOne("ExpertService.Model.Dosya", "Dosya")
                        .WithMany("UcretBilgileris")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpertService.Model.ZamanCizelgesi", b =>
                {
                    b.HasOne("ExpertService.Model.CalismaDonemi", "CalismaDonemi")
                        .WithMany("ZamanCizelgesis")
                        .HasForeignKey("CalismaDonemiDonemId");
                });
#pragma warning restore 612, 618
        }
    }
}
